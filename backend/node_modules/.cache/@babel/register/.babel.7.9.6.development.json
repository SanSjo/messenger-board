{
  "{\"sourceRoot\":\"/Users/Sanna/Desktop/job-test/storytel-message-board/backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Sanna/Desktop/job-test/storytel-message-board/backend\",\"filename\":\"/Users/Sanna/Desktop/job-test/storytel-message-board/backend/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Sanna/Desktop/job-test/storytel-message-board/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Sanna/Desktop/job-test/storytel-message-board/backend/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Sanna/Desktop/job-test/storytel-message-board/backend",
      "filename": "/Users/Sanna/Desktop/job-test/storytel-message-board/backend/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Sanna/Desktop/job-test/storytel-message-board/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Sanna/Desktop/job-test/storytel-message-board/backend/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Sanna/Desktop/job-test/storytel-message-board/backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Sanna/Desktop/job-test/storytel-message-board/backend/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar mongoUrl = process.env.MONGO_URL || 'mongodb://localhost/message-board-storytel';\n\n_mongoose.default.connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose.default.Promise = Promise;\n\nvar Message = _mongoose.default.model('Message', {\n  id: Number,\n  author: Number,\n  message: String\n}); // Defines the port the app will run on. Defaults to 8080, but can be\n// overridden when starting the server. For example:\n//\n//   PORT=9000 npm start\n\n\nvar port = process.env.PORT || 8080;\nvar app = (0, _express.default)(); // Add middlewares to enable cors and json body parsing\n\napp.use((0, _cors.default)());\napp.use(_bodyParser.default.json()); // Start defining your routes here\n\napp.get('/messages', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var message;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Message.find();\n\n          case 2:\n            message = _context.sent;\n            res.send(message);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.post('/messages', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var message;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            message = new Message({\n              id: req.body.id,\n              author: req.body.author,\n              message: req.body.message\n            });\n            _context2.next = 3;\n            return message.save();\n\n          case 3:\n            res.json(message);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.put('/messages/:id', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var message;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return Message.findOne({\n              _id: req.params.id\n            });\n\n          case 3:\n            message = _context3.sent;\n\n            if (req.body.message) {\n              message.message = req.body.message;\n            }\n\n            _context3.next = 7;\n            return message.save();\n\n          case 7:\n            res.json(message);\n            _context3.next = 13;\n            break;\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](0);\n            res.status(404).json({\n              error: 'Message doesnt exist'\n            });\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 10]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\napp.delete('/messages/:id', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return Message.deleteOne({\n              _id: req.params.id\n            });\n\n          case 3:\n            res.status(204).send();\n            _context4.next = 9;\n            break;\n\n          case 6:\n            _context4.prev = 6;\n            _context4.t0 = _context4[\"catch\"](0);\n            res.status(404).json({\n              error: 'Message doesnt exist'\n            });\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 6]]);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}()); // Start the server\n\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJtb25nb1VybCIsInByb2Nlc3MiLCJlbnYiLCJNT05HT19VUkwiLCJtb25nb29zZSIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJQcm9taXNlIiwiTWVzc2FnZSIsIm1vZGVsIiwiaWQiLCJOdW1iZXIiLCJhdXRob3IiLCJtZXNzYWdlIiwiU3RyaW5nIiwicG9ydCIsIlBPUlQiLCJhcHAiLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsImdldCIsInJlcSIsInJlcyIsImZpbmQiLCJzZW5kIiwicG9zdCIsImJvZHkiLCJzYXZlIiwicHV0IiwiZmluZE9uZSIsIl9pZCIsInBhcmFtcyIsInN0YXR1cyIsImVycm9yIiwiZGVsZXRlIiwiZGVsZXRlT25lIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFFQSxJQUFNQSxRQUFRLEdBQ2JDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxTQUFaLElBQXlCLDRDQUQxQjs7QUFFQUMsa0JBQVNDLE9BQVQsQ0FBaUJMLFFBQWpCLEVBQTJCO0FBQUVNLEVBQUFBLGVBQWUsRUFBRSxJQUFuQjtBQUF5QkMsRUFBQUEsa0JBQWtCLEVBQUU7QUFBN0MsQ0FBM0I7O0FBQ0FILGtCQUFTSSxPQUFULEdBQW1CQSxPQUFuQjs7QUFFQSxJQUFNQyxPQUFPLEdBQUdMLGtCQUFTTSxLQUFULENBQWUsU0FBZixFQUEwQjtBQUN6Q0MsRUFBQUEsRUFBRSxFQUFFQyxNQURxQztBQUV6Q0MsRUFBQUEsTUFBTSxFQUFFRCxNQUZpQztBQUd6Q0UsRUFBQUEsT0FBTyxFQUFFQztBQUhnQyxDQUExQixDQUFoQixDLENBTUE7QUFDQTtBQUNBO0FBQ0E7OztBQUNBLElBQU1DLElBQUksR0FBR2YsT0FBTyxDQUFDQyxHQUFSLENBQVllLElBQVosSUFBb0IsSUFBakM7QUFDQSxJQUFNQyxH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QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUE1Qjs7QUFBQTtBQUFBO0FBQUE7QUFBQSxLLENBU0E7O0FBQ0FqQixHQUFHLENBQUNvQixNQUFKLENBQVd0QixJQUFYLEVBQWlCLFlBQU07QUFDdEJ1QixFQUFBQSxPQUFPLENBQUNDLEdBQVIsOENBQWtEeEIsSUFBbEQ7QUFDQSxDQUZEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9TYW5uYS9EZXNrdG9wL2pvYi10ZXN0L3N0b3J5dGVsLW1lc3NhZ2UtYm9hcmQvYmFja2VuZC8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xuaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcblxuY29uc3QgbW9uZ29VcmwgPVxuXHRwcm9jZXNzLmVudi5NT05HT19VUkwgfHwgJ21vbmdvZGI6Ly9sb2NhbGhvc3QvbWVzc2FnZS1ib2FyZC1zdG9yeXRlbCc7XG5tb25nb29zZS5jb25uZWN0KG1vbmdvVXJsLCB7IHVzZU5ld1VybFBhcnNlcjogdHJ1ZSwgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlIH0pO1xubW9uZ29vc2UuUHJvbWlzZSA9IFByb21pc2U7XG5cbmNvbnN0IE1lc3NhZ2UgPSBtb25nb29zZS5tb2RlbCgnTWVzc2FnZScsIHtcblx0aWQ6IE51bWJlcixcblx0YXV0aG9yOiBOdW1iZXIsXG5cdG1lc3NhZ2U6IFN0cmluZyxcbn0pO1xuXG4vLyBEZWZpbmVzIHRoZSBwb3J0IHRoZSBhcHAgd2lsbCBydW4gb24uIERlZmF1bHRzIHRvIDgwODAsIGJ1dCBjYW4gYmVcbi8vIG92ZXJyaWRkZW4gd2hlbiBzdGFydGluZyB0aGUgc2VydmVyLiBGb3IgZXhhbXBsZTpcbi8vXG4vLyAgIFBPUlQ9OTAwMCBucG0gc3RhcnRcbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDgwODA7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbi8vIEFkZCBtaWRkbGV3YXJlcyB0byBlbmFibGUgY29ycyBhbmQganNvbiBib2R5IHBhcnNpbmdcbmFwcC51c2UoY29ycygpKTtcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuXG4vLyBTdGFydCBkZWZpbmluZyB5b3VyIHJvdXRlcyBoZXJlXG5hcHAuZ2V0KCcvbWVzc2FnZXMnLCBhc3luYyAocmVxLCByZXMpID0+IHtcblx0Y29uc3QgbWVzc2FnZSA9IGF3YWl0IE1lc3NhZ2UuZmluZCgpO1xuXHRyZXMuc2VuZChtZXNzYWdlKTtcbn0pO1xuXG5hcHAucG9zdCgnL21lc3NhZ2VzJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG5cdGNvbnN0IG1lc3NhZ2UgPSBuZXcgTWVzc2FnZSh7XG5cdFx0aWQ6IHJlcS5ib2R5LmlkLFxuXHRcdGF1dGhvcjogcmVxLmJvZHkuYXV0aG9yLFxuXHRcdG1lc3NhZ2U6IHJlcS5ib2R5Lm1lc3NhZ2UsXG5cdH0pO1xuXHRhd2FpdCBtZXNzYWdlLnNhdmUoKTtcblxuXHRyZXMuanNvbihtZXNzYWdlKTtcbn0pO1xuXG5hcHAucHV0KCcvbWVzc2FnZXMvOmlkJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG5cdHRyeSB7XG5cdFx0Y29uc3QgbWVzc2FnZSA9IGF3YWl0IE1lc3NhZ2UuZmluZE9uZSh7IF9pZDogcmVxLnBhcmFtcy5pZCB9KTtcblx0XHRpZiAocmVxLmJvZHkubWVzc2FnZSkge1xuXHRcdFx0bWVzc2FnZS5tZXNzYWdlID0gcmVxLmJvZHkubWVzc2FnZTtcblx0XHR9XG5cdFx0YXdhaXQgbWVzc2FnZS5zYXZlKCk7XG5cdFx0cmVzLmpzb24obWVzc2FnZSk7XG5cdH0gY2F0Y2gge1xuXHRcdHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgZXJyb3I6ICdNZXNzYWdlIGRvZXNudCBleGlzdCcgfSk7XG5cdH1cbn0pO1xuXG5hcHAuZGVsZXRlKCcvbWVzc2FnZXMvOmlkJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG5cdHRyeSB7XG5cdFx0YXdhaXQgTWVzc2FnZS5kZWxldGVPbmUoeyBfaWQ6IHJlcS5wYXJhbXMuaWQgfSk7XG5cdFx0cmVzLnN0YXR1cygyMDQpLnNlbmQoKTtcblx0fSBjYXRjaCB7XG5cdFx0cmVzLnN0YXR1cyg0MDQpLmpzb24oeyBlcnJvcjogJ01lc3NhZ2UgZG9lc250IGV4aXN0JyB9KTtcblx0fVxufSk7XG5cbi8vIFN0YXJ0IHRoZSBzZXJ2ZXJcbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuXHRjb25zb2xlLmxvZyhgU2VydmVyIHJ1bm5pbmcgb24gaHR0cDovL2xvY2FsaG9zdDoke3BvcnR9YCk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "mongoUrl",
        "process",
        "env",
        "MONGO_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "Promise",
        "Message",
        "model",
        "id",
        "Number",
        "author",
        "message",
        "String",
        "port",
        "PORT",
        "app",
        "use",
        "bodyParser",
        "json",
        "get",
        "req",
        "res",
        "find",
        "send",
        "post",
        "body",
        "save",
        "put",
        "findOne",
        "_id",
        "params",
        "status",
        "error",
        "delete",
        "deleteOne",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/Sanna/Desktop/job-test/storytel-message-board/backend/",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport mongoose from 'mongoose';\n\nconst mongoUrl =\n\tprocess.env.MONGO_URL || 'mongodb://localhost/message-board-storytel';\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true });\nmongoose.Promise = Promise;\n\nconst Message = mongoose.model('Message', {\n\tid: Number,\n\tauthor: Number,\n\tmessage: String,\n});\n\n// Defines the port the app will run on. Defaults to 8080, but can be\n// overridden when starting the server. For example:\n//\n//   PORT=9000 npm start\nconst port = process.env.PORT || 8080;\nconst app = express();\n\n// Add middlewares to enable cors and json body parsing\napp.use(cors());\napp.use(bodyParser.json());\n\n// Start defining your routes here\napp.get('/messages', async (req, res) => {\n\tconst message = await Message.find();\n\tres.send(message);\n});\n\napp.post('/messages', async (req, res) => {\n\tconst message = new Message({\n\t\tid: req.body.id,\n\t\tauthor: req.body.author,\n\t\tmessage: req.body.message,\n\t});\n\tawait message.save();\n\n\tres.json(message);\n});\n\napp.put('/messages/:id', async (req, res) => {\n\ttry {\n\t\tconst message = await Message.findOne({ _id: req.params.id });\n\t\tif (req.body.message) {\n\t\t\tmessage.message = req.body.message;\n\t\t}\n\t\tawait message.save();\n\t\tres.json(message);\n\t} catch {\n\t\tres.status(404).json({ error: 'Message doesnt exist' });\n\t}\n});\n\napp.delete('/messages/:id', async (req, res) => {\n\ttry {\n\t\tawait Message.deleteOne({ _id: req.params.id });\n\t\tres.status(204).send();\n\t} catch {\n\t\tres.status(404).json({ error: 'Message doesnt exist' });\n\t}\n});\n\n// Start the server\napp.listen(port, () => {\n\tconsole.log(`Server running on http://localhost:${port}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588850428011
  }
}